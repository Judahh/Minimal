import("global");

PetFood = {
    name: String;
    price: Unsigned(Number);
    portion: Natural;
    (name, price, portion) -> {
        this.name = name;
        this.price = price;
        this.portion = portion;
    };
};

Cat = {
    name: String;

    (name) -> {
        this.name = name;
    };

    sound = () -> {
        -> "Meow";
    };

    eat = (food: PetFood) -> {
        log("Yum yum!");
        food.portion = food.portion - 1;
    };
};

Dog = {
    name: String;

    (name) -> {
        this.name = name;
    };

    sound = () -> {
        -> "Woof";
    };

    eat = (food: PetFood) -> {
        log("Yum yum!");
        food.portion = food.portion - 1;
    };
};

Pet = Cat | Dog;

PetEngine = {
    generateFood = (pet: Pet) -> {
        petFood: PetFood;
        if (pet.isInstanceOf(Cat), {
            petFood = PetFood("Fish", 10, 100);
        },{
            petFood = PetFood("Meat", 20, 200);
        });
        -> petFood;
    };

    generateFood2 = (pet: Pet) -> {
        petFood: PetFood;
        if(pet.isInstanceOf(Cat), {
            final.-> PetFood("Fish", 20, 200);
        },{
            final.-> PetFood("Meat", 10, 100);
        });
    };

    generateFood3 = (pet: Pet) -> {
        petFood: PetFood;
        -> if(pet.isInstanceOf(Cat),
            PetFood("Fish", 30, 300);
        ,   PetFood("Meat", 30, 300);
        );
    };

    generateFood4 = (pet: Pet) -> {
        petFood: PetFood;
        if(pet.isInstanceOf(Cat), [
            -> PetFood("Fish", 40, 400);
        ],[
            -> PetFood("Meat", 40, 400);
        ]);
    };

    giveFood = (pet: Pet, petFood: PetFood) -> {
        log("Here is your food, " + pet.name + "!");
        pet.eat(petFood);
    };
};

# Some Initial Comment

##
 # A simple example of a pet engine that generates food for pets and feeds them.
 # The engine can generate food for both cats and dogs.
 #
 # - Returns void.
 # - Prints the name, price, and portion of the food.
##
main = () -> {
    $ cat = Cat("Kitty"); # Optional $ keyword for explicit variable declaration
    dog = Dog("Doggy"## Some Double Internal Comment ##); # Without optional $ keyword for implicit variable declaration

    # Some Comment Over Comment
    catFood = FoodGenerator.generate(cat##blooou##);
    dogFood = FoodGenerator.generate(dog);

    log(catFood.name); #Some Comment .f.ewveovkerv : ;}~l^}DPSL}A
    log(catFood.price);
    log(catFood.portion)### #Some Tripple Internal Comment ###;

    log(dogFood.name);
    log(dogFood.price);
    log(dogFood.portion);

    PetEngine.giveFood(cat, catFood);
    PetEngine.giveFood(dog, dogFood);

    if(dogFood.portion >= catFood.portion, {
        log("Doggy has more food! Or they have the same amount.");
    },{
        log("Kitty has more food!");
    });
    log("Doggy has '" + dogFood.portion + "' portions of food.");
    log("Kitty has '" + catFood.portion + "' portions of food.");
    log("Doggy first Letter is '" + 'D' + "'.");
};